{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://regres.in/api/login';\n  }\n  login(reqBody) {\n    return this.http.post(`${this.apiUrl}`, reqBody).pipe(tap(response => {\n      localStorage.setItem('access_token', response.access_token);\n    }));\n  }\n  logout() {\n    localStorage.removeItem('access_token');\n  }\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n  isAuthenticated() {\n    const token = this.getToken();\n    return token !== null;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AASpC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,6BAA6B;EAEN;EAExCC,KAAK,CAACC,OAAW;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAe,GAAG,IAAI,CAACC,MAAM,EAAE,EAACF,OAAO,CAAC,CAACG,IAAI,CAChER,GAAG,CAACS,QAAQ,IAAG;MACbC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACG,YAAY,CAAC;IAC7D,CAAC,CAAC,CACH;EACH;EAEAC,MAAM;IACJH,YAAY,CAACI,UAAU,CAAC,cAAc,CAAC;EACzC;EAEAC,QAAQ;IACN,OAAOL,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC;EAC7C;EAEAC,eAAe;IACb,MAAMC,KAAK,GAAG,IAAI,CAACH,QAAQ,EAAE;IAC7B,OAAOG,KAAK,KAAK,IAAI;EACvB;;AAzBWjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["tap","AuthService","constructor","http","login","reqBody","post","apiUrl","pipe","response","localStorage","setItem","access_token","logout","removeItem","getToken","getItem","isAuthenticated","token","factory","providedIn"],"sourceRoot":"","sources":["D:\\sample\\src\\app\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ninterface AuthResponse {\n  access_token: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiUrl = 'https://regres.in/api/login';\n\n  constructor(private http: HttpClient) { }\n\n  login(reqBody:any): Observable<AuthResponse> {\n    return this.http.post<AuthResponse>(`${this.apiUrl}`,reqBody).pipe(\n      tap(response => {\n        localStorage.setItem('access_token', response.access_token);\n      })\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('access_token');\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('access_token');\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.getToken();\n    return token !== null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}